Script started on 2025-01-29 18:18:46+00:00 [TERM="xterm-256color" TTY="/dev/pts/0" COLUMNS="122" LINES="26"]
[0;32m@Arndt-Madison [0mâžœ [1;34m/workspaces/csci-330-homeworks-Arndt-Madison [0;36m([1;31mmain[0;36m) [0m$ sbcl
This is SBCL 1.4.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.
* (abs3  3 -3  )

3
* (equal 3 (abs -3))

T
* (not (equal 3 (abs -3)))

NIL
* (0 ) / 2 (( 12  + 8 12))

1/10
* (/ (+ 8 12) 2)

10
* (+ (* 4 4) (* 3 3))

25
* (defun MILES-PER-GALLON (INITAL-ODOMETER-READING FINAL-ODOMITER    ETER-READING GALLONS-CONSUMED) (/ (- FINAL-ODOMITER-READING INIT                                                                                                                           


))

debugger invoked on a SB-INT:SIMPLE-READER-ERROR in thread
#<THREAD "main thread" RUNNING {9461061}>:
  unmatched close parenthesis

    Stream: #<SYNONYM-STREAM :SYMBOL SB-SYS:*STDIN* {91051F1}>

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [ABORT] Exit debugger, returning to top level.

(SB-IMPL::READ-RIGHT-PAREN #<SYNONYM-STREAM :SYMBOL SB-SYS:*STDIN* {91051F1}> #<unused argument>)
0] (defun MILES-PER-GALLON (INITAL-ODOMETER-READING FINAL-ODOMETER-READING GALLONS-CONSUMED)
(defun MILES-PER-GALLON (INITAL-ODOMETER-READING FINAL-ODOMETER-READING GALLONS-CONSUMED)                                                                                         (/ (- FINAL-ODOMITER-READING INITAL-ODOMITER                            ETER-READING INITAL-ODOMED TER-READING) GALLONS-CONSUMED))

MILES-PER-GALLON
0] (THIRD     tird    third ( (the quick brown fox))
; in: LAMBDA (#:G390)
;     (THE QUICK BROWN FOX)
; 
; caught ERROR:
;   error while parsing arguments to special operator THE:
;     too many elements in
;       (QUICK BROWN FOX)
;     to satisfy lambda list
;       (SB-C::VALUE-TYPE SB-KERNEL:FORM):
;     exactly 2 expected, but got 3
; 
; compilation unit finished
;   caught 1 ERROR condition

debugger invoked on a SB-INT:COMPILED-PROGRAM-ERROR in thread
#<THREAD "main thread" RUNNING {9461061}>:
  Execution of a form compiled with errors.
Form:
  (THE QUICK BROWN FOX)
Compile-time error:
  error while parsing arguments to special operator THE:
  too many elements in
    (QUICK BROWN FOX)
  to satisfy lambda list
    (SB-C::VALUE-TYPE SB-KERNEL:FORM):
  exactly 2 expected, but got 3

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [ABORT] Reduce debugger level (to debug level 1).
  1:         Exit debugger, returning to top level.

((LAMBDA (#:G390)) #<unused argument>)
   source: (THE QUICK BROWN FOX)
0[2] (third (the quick brown fox))                      '(the quick brown fox))

BROWN
0[2] (list 2 and 2 is 4)
; in: LAMBDA (#:G392)
;     (LIST 2 AND 2 IS 4)
; 
; caught WARNING:
;   undefined variable: AND
; 
; caught WARNING:
;   undefined variable: IS
; 
; compilation unit finished
;   Undefined variables:
;     AND IS
;   caught 2 WARNING conditions

debugger invoked on a UNBOUND-VARIABLE in thread
#<THREAD "main thread" RUNNING {9461061}>:
  The variable AND is unbound.

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [ABORT] Reduce debugger level (to debug level 2).
  1:         Reduce debugger level (to debug level 1).
  2:         Exit debugger, returning to top level.

((LAMBDA (#:G392)) #<unused argument>)
   source: (LIST 2 AND 2 IS 4)
0[3] (list 2 'and 2 'is 4)

(2 AND 2 IS 4)
0[3] (+ 1 (length   (list t t t t)))

5
0[3] (+ 1 (length (list t t t t)))                            + 1 '(length (list t t t t)))
; in: LAMBDA (#:G395)
;     (+ 1 '(LENGTH (LIST T T T T)))
; 
; caught WARNING:
;   Constant (LENGTH (LIST T T T T)) conflicts with its asserted type NUMBER.
;   See also:
;     The SBCL Manual, Node "Handling of Types"
; 
; compilation unit finished
;   caught 1 WARNING condition

debugger invoked on a SIMPLE-TYPE-ERROR in thread
#<THREAD "main thread" RUNNING {9461061}>:
  Value of '(LENGTH (LIST T T T T)) in
  (+ 1 '(LENGTH (LIST T T T T)))
  is
    (LENGTH (LIST T T T T)),
  not a
    NUMBER.

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [ABORT] Reduce debugger level (to debug level 3).
  1:         Reduce debugger level (to debug level 2).
  2:         Reduce debugger level (to debug level 1).
  3:         Exit debugger, returning to top level.

(SB-C::%COMPILE-TIME-TYPE-ERROR ((LENGTH (LIST T T T T))) NUMBER #<unused argument> ((QUOTE (LENGTH (LIST T T T T)))) "(+ 1 '(LENGTH (LIST T T T T)))" NIL)
0[4] (cons 'patriv ck (seymour marvins))^[[D     )
; in: LAMBDA (#:G396)
;     (SEYMOUR MARVINS)
; 
; caught WARNING:
;   undefined variable: MARVINS
; 
; caught STYLE-WARNING:
;   undefined function: SEYMOUR
; 
; compilation unit finished
;   Undefined function:
;     SEYMOUR
;   Undefined variable:
;     MARVINS
;   caught 1 WARNING condition
;   caught 1 STYLE-WARNING condition

debugger invoked on a UNBOUND-VARIABLE in thread
#<THREAD "main thread" RUNNING {9461061}>:
  The variable MARVINS is unbound.

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [ABORT] Reduce debugger level (to debug level 4).
  1:         Reduce debugger level (to debug level 3).
  2:         Reduce debugger level (to debug level 2).
  3:         Reduce debugger level (to debug level 1).
  4:         Exit debugger, returning to top level.

((LAMBDA (#:G396)) #<unused argument>)
   source: (SEYMOUR MARVINS)
0[5] (cons 'patrick (seymour marvins))                  '(seymour marvins))

(PATRICK SEYMOUR MARVINS)
0[5] (cons 'patrick '(seymour marvins))                   (list seymour marvins))
; in: LAMBDA (#:G398)
;     (LIST SEYMOUR MARVINS)
; 
; caught WARNING:
;   undefined variable: MARVINS
; 
; caught WARNING:
;   undefined variable: SEYMOUR
; 
; compilation unit finished
;   Undefined variables:
;     MARVINS SEYMOUR
;   caught 2 WARNING conditions

debugger invoked on a UNBOUND-VARIABLE in thread
#<THREAD "main thread" RUNNING {9461061}>:
  The variable SEYMOUR is unbound.

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [ABORT] Reduce debugger level (to debug level 5).
  1:         Reduce debugger level (to debug level 4).
  2:         Reduce debugger level (to debug level 3).
  3:         Reduce debugger level (to debug level 2).
  4:         Reduce debugger level (to debug level 1).
  5:         Exit debugger, returning to top level.

((LAMBDA (#:G398)) #<unused argument>)
   source: (LIST SEYMOUR MARVINS)
0[6] (cons 'patrick (list seymour marvins))                 'seymour marvins))         'marvins))

(PATRICK SEYMOUR MARVINS)
0[6] ( (defun mystery (x) (list (second x) (first x)))

MYSTERY
0[6] (mystery â€™(dancing bear))
; in: LAMBDA (#:G401)
;     (MYSTERY â€™ (DANCING BEAR))
; 
; caught STYLE-WARNING:
;   The function was called with two arguments, but wants exactly one.
; in: LAMBDA (#:G401)
;     (DANCING BEAR)
; 
; caught WARNING:
;   undefined variable: BEAR
; 
; caught STYLE-WARNING:
;   undefined function: DANCING

;     (MYSTERY â€™ (DANCING BEAR))
; 
; caught WARNING:
;   undefined variable: â€™
; 
; compilation unit finished
;   Undefined function:
;     DANCING
;   Undefined variables:
;     BEAR â€™
;   caught 2 WARNING conditions
;   caught 2 STYLE-WARNING conditions

debugger invoked on a UNBOUND-VARIABLE in thread
#<THREAD "main thread" RUNNING {9461061}>:
  The variable â€™ is unbound.

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [ABORT] Reduce debugger level (to debug level 6).
  1:         Reduce debugger level (to debug level 5).
  2:         Reduce debugger level (to debug level 4).
  3:         Reduce debugger level (to debug level 3).
  4:         Reduce debugger level (to debug level 2).
  5:         Reduce debugger level (to debug level 1).
  6:         Exit debugger, returning to top level.

((LAMBDA (#:G401)) #<unused argument>)
   source: (MYSTERY â€™ (DANCING BEAR))
0[7] (mystery â€™(dancing bear))                '(dancing bear))

(BEAR DANCING)
0[7] (mystery â€™dancing â€™bear)               'dancing 'bear)
Help! 11 nested errors. SB-KERNEL:*MAXIMUM-ERROR-DEPTH* exceeded.
Backtrace for: #<SB-THREAD:THREAD "main thread" RUNNING {9461061}>
0: ((LAMBDA (#:G401)) #<unused argument>)
1: (INTERACTIVE-EVAL (MYSTERY â€™ (DANCING BEAR)) :EVAL #<FUNCTION SB-DEBUG::DEBUG-EVAL>)
2: (SB-DEBUG::DEBUG-EVAL-PRINT (MYSTERY â€™ (DANCING BEAR)))
3: (SB-DEBUG::DEBUG-LOOP-FUN)
4: (INTERNAL-DEBUG)
5: ((FLET DEBUG :IN SB-DEBUG::%INVOKE-DEBUGGER))
6: (SB-DEBUG::%INVOKE-DEBUGGER #<UNBOUND-VARIABLE SEYMOUR {A955911}>)
7: ((LAMBDA NIL :IN SB-DEBUG::FUNCALL-WITH-DEBUG-IO-SYNTAX))
8: (SB-IMPL::CALL-WITH-SANE-IO-SYNTAX #<CLOSURE (LAMBDA NIL :IN SB-DEBUG::FUNCALL-WITH-DEBUG-IO-SYNTAX) {A955995}>)
9: (SB-IMPL::%WITH-STANDARD-IO-SYNTAX #<CLOSURE (FLET "THUNK" :IN SB-DEBUG::FUNCALL-WITH-DEBUG-IO-SYNTAX) {F75AB8DD}>)
10: (SB-DEBUG::FUNCALL-WITH-DEBUG-IO-SYNTAX #<FUNCTION SB-DEBUG::%INVOKE-DEBUGGER> #<UNBOUND-VARIABLE SEYMOUR {A955911}>)
11: (INVOKE-DEBUGGER #<UNBOUND-VARIABLE SEYMOUR {A955911}>)
12: (ERROR UNBOUND-VARIABLE :NAME SEYMOUR)
13: ("UNBOUND-SYMBOL-ERROR" SEYMOUR)
14: (SB-KERNEL:INTERNAL-ERROR #.(SB-SYS:INT-SAP #XF75ABBCC) #<unused argument>)
15: ("foreign function: call_into_lisp")
16: ("foreign function: funcall2")
17: ("foreign function: interrupt_internal_error")
18: ("foreign function: handle_trap")
19: ("foreign function: #x805DE49")
20: ((LAMBDA (#:G398)) #<unused argument>)
21: (INTERACTIVE-EVAL (CONS (QUOTE PATRICK) (LIST SEYMOUR MARVINS)) :EVAL #<FUNCTION SB-DEBUG::DEBUG-EVAL>)
22: (SB-DEBUG::DEBUG-EVAL-PRINT (CONS (QUOTE PATRICK) (LIST SEYMOUR MARVINS)))
23: (SB-DEBUG::DEBUG-LOOP-FUN)
24: (INTERNAL-DEBUG)
25: ((FLET DEBUG :IN SB-DEBUG::%INVOKE-DEBUGGER))
26: (SB-DEBUG::%INVOKE-DEBUGGER #<UNBOUND-VARIABLE MARVINS {A935251}>)
27: ((LAMBDA NIL :IN SB-DEBUG::FUNCALL-WITH-DEBUG-IO-SYNTAX))
28: (SB-IMPL::CALL-WITH-SANE-IO-SYNTAX #<CLOSURE (LAMBDA NIL :IN SB-DEBUG::FUNCALL-WITH-DEBUG-IO-SYNTAX) {A9352D5}>)
29: (SB-IMPL::%WITH-STANDARD-IO-SYNTAX #<CLOSURE (FLET "THUNK" :IN SB-DEBUG::FUNCALL-WITH-DEBUG-IO-SYNTAX) {F75AC25D}>)
30: (SB-DEBUG::FUNCALL-WITH-DEBUG-IO-SYNTAX #<FUNCTION SB-DEBUG::%INVOKE-DEBUGGER> #<UNBOUND-VARIABLE MARVINS {A935251}>)
31: (INVOKE-DEBUGGER #<UNBOUND-VARIABLE MARVINS {A935251}>)
32: (ERROR UNBOUND-VARIABLE :NAME MARVINS)
33: ("UNBOUND-SYMBOL-ERROR" MARVINS)
34: (SB-KERNEL:INTERNAL-ERROR #.(SB-SYS:INT-SAP #XF75AC54C) #<unused argument>)
35: ("foreign function: call_into_lisp")
36: ("foreign function: funcall2")
37: ("foreign function: interrupt_internal_error")
38: ("foreign function: handle_trap")
39: ("foreign function: #x805DE49")
40: ((LAMBDA (#:G396)) #<unused argument>)
41: (INTERACTIVE-EVAL (CONS (QUOTE PATRICK) (SEYMOUR MARVINS)) :EVAL #<FUNCTION SB-DEBUG::DEBUG-EVAL>)
42: (SB-DEBUG::DEBUG-EVAL-PRINT (CONS (QUOTE PATRICK) (SEYMOUR MARVINS)))
43: (SB-DEBUG::DEBUG-LOOP-FUN)
44: (INTERNAL-DEBUG)
45: ((FLET DEBUG :IN SB-DEBUG::%INVOKE-DEBUGGER))
46: (SB-DEBUG::%INVOKE-DEBUGGER #<SIMPLE-TYPE-ERROR expected-type: NUMBER datum: (LENGTH (LIST T T T T))>)
47: ((LAMBDA NIL :IN SB-DEBUG::FUNCALL-WITH-DEBUG-IO-SYNTAX))
48: (SB-IMPL::CALL-WITH-SANE-IO-SYNTAX #<CLOSURE (LAMBDA NIL :IN SB-DEBUG::FUNCALL-WITH-DEBUG-IO-SYNTAX) {A91CDE5}>)
49: (SB-IMPL::%WITH-STANDARD-IO-SYNTAX #<CLOSURE (FLET "THUNK" :IN SB-DEBUG::FUNCALL-WITH-DEBUG-IO-SYNTAX) {F75ACBCD}>)
50: (SB-DEBUG::FUNCALL-WITH-DEBUG-IO-SYNTAX #<FUNCTION SB-DEBUG::%INVOKE-DEBUGGER> #<SIMPLE-TYPE-ERROR expected-type: NUMBER datum: (LENGTH (LIST T T T T))>)
51: (INVOKE-DEBUGGER #<SIMPLE-TYPE-ERROR expected-type: NUMBER datum: (LENGTH (LIST T T T T))>)
52: (ERROR SIMPLE-TYPE-ERROR :DATUM (LENGTH (LIST T T T T)) :EXPECTED-TYPE NUMBER :FORMAT-CONTROL "~@<Value of ~S in ~_~A ~I~_is ~2I~_~S, ~I~_not a ~2I~_~/sb-impl:print-type-specifier/.~:@>" :FORMAT-ARGUMENTS ((QUOTE #1=(LENGTH (LIST T T T T))) "(+ 1 '(LENGTH (LIST T T T T)))" #1# NUMBER))
53: (SB-C::%COMPILE-TIME-TYPE-ERROR ((LENGTH (LIST T T T T))) NUMBER #<unused argument> ((QUOTE (LENGTH (LIST T T T T)))) "(+ 1 '(LENGTH (LIST T T T T)))" NIL)
54: ((LAMBDA (#:G395)) #<unused argument>)
55: (INTERACTIVE-EVAL (+ 1 (QUOTE (LENGTH (LIST T T T T)))) :EVAL #<FUNCTION SB-DEBUG::DEBUG-EVAL>)
56: (SB-DEBUG::DEBUG-EVAL-PRINT (+ 1 (QUOTE (LENGTH (LIST T T T T)))))
57: (SB-DEBUG::DEBUG-LOOP-FUN)
58: (INTERNAL-DEBUG)
59: ((FLET DEBUG :IN SB-DEBUG::%INVOKE-DEBUGGER))
60: (SB-DEBUG::%INVOKE-DEBUGGER #<UNBOUND-VARIABLE AND {A8EE8D9}>)
61: ((LAMBDA NIL :IN SB-DEBUG::FUNCALL-WITH-DEBUG-IO-SYNTAX))
62: (SB-IMPL::CALL-WITH-SANE-IO-SYNTAX #<CLOSURE (LAMBDA NIL :IN SB-DEBUG::FUNCALL-WITH-DEBUG-IO-SYNTAX) {A8EE95D}>)
63: (SB-IMPL::%WITH-STANDARD-IO-SYNTAX #<CLOSURE (FLET "THUNK" :IN SB-DEBUG::FUNCALL-WITH-DEBUG-IO-SYNTAX) {F75ACEDD}>)
64: (SB-DEBUG::FUNCALL-WITH-DEBUG-IO-SYNTAX #<FUNCTION SB-DEBUG::%INVOKE-DEBUGGER> #<UNBOUND-VARIABLE AND {A8EE8D9}>)
65: (INVOKE-DEBUGGER #<UNBOUND-VARIABLE AND {A8EE8D9}>)
66: (ERROR UNBOUND-VARIABLE :NAME AND)
67: ("UNBOUND-SYMBOL-ERROR" AND)
68: (SB-KERNEL:INTERNAL-ERROR #.(SB-SYS:INT-SAP #XF75AD1CC) #<unused argument>)
69: ("foreign function: call_into_lisp")
70: ("foreign function: funcall2")
71: ("foreign function: interrupt_internal_error")
72: ("foreign function: handle_trap")
73: ("foreign function: #x805DE49")
74: ((LAMBDA (#:G392)) #<unused argument>)
75: (INTERACTIVE-EVAL (LIST 2 AND 2 IS 4) :EVAL #<FUNCTION SB-DEBUG::DEBUG-EVAL>)
76: (SB-DEBUG::DEBUG-EVAL-PRINT (LIST 2 AND 2 IS 4))
77: (SB-DEBUG::DEBUG-LOOP-FUN)
78: (INTERNAL-DEBUG)
79: ((FLET DEBUG :IN SB-DEBUG::%INVOKE-DEBUGGER))
80: (SB-DEBUG::%INVOKE-DEBUGGER #<SB-INT:COMPILED-PROGRAM-ERROR {A8CD659}>)
81: ((LAMBDA NIL :IN SB-DEBUG::FUNCALL-WITH-DEBUG-IO-SYNTAX))
82: (SB-IMPL::CALL-WITH-SANE-IO-SYNTAX #<CLOSURE (LAMBDA NIL :IN SB-DEBUG::FUNCALL-WITH-DEBUG-IO-SYNTAX) {A8CD915}>)
83: (SB-IMPL::%WITH-STANDARD-IO-SYNTAX #<CLOSURE (FLET "THUNK" :IN SB-DEBUG::FUNCALL-WITH-DEBUG-IO-SYNTAX) {F75AD845}>)
84: (SB-DEBUG::FUNCALL-WITH-DEBUG-IO-SYNTAX #<FUNCTION SB-DEBUG::%INVOKE-DEBUGGER> #<SB-INT:COMPILED-PROGRAM-ERROR {A8CD659}>)
85: (INVOKE-DEBUGGER #<SB-INT:COMPILED-PROGRAM-ERROR {A8CD659}>)
86: (ERROR SB-INT:COMPILED-PROGRAM-ERROR :MESSAGE #<SIMPLE-BASE-STRING "error while parsing arguments to special operator ..." (len=195) {A8C2637}> :SOURCE "(THE QUICK BROWN FOX)")
87: ((LAMBDA (#:G390)) #<unused argument>)
88: (INTERACTIVE-EVAL (THIRD (THE QUICK BROWN FOX)) :EVAL #<FUNCTION SB-DEBUG::DEBUG-EVAL>)
89: (SB-DEBUG::DEBUG-EVAL-PRINT (THIRD (THE QUICK BROWN FOX)))
90: (SB-DEBUG::DEBUG-LOOP-FUN)
91: (INTERNAL-DEBUG)
92: ((FLET DEBUG :IN SB-DEBUG::%INVOKE-DEBUGGER))
93: (SB-DEBUG::%INVOKE-DEBUGGER #<SB-INT:SIMPLE-READER-ERROR "unmatched close parenthesis" {A36A799}>)
94: ((LAMBDA NIL :IN SB-DEBUG::FUNCALL-WITH-DEBUG-IO-SYNTAX))
95: (SB-IMPL::CALL-WITH-SANE-IO-SYNTAX #<CLOSURE (LAMBDA NIL :IN SB-DEBUG::FUNCALL-WITH-DEBUG-IO-SYNTAX) {A36AAFD}>)
96: (SB-IMPL::%WITH-STANDARD-IO-SYNTAX #<CLOSURE (FLET "THUNK" :IN SB-DEBUG::FUNCALL-WITH-DEBUG-IO-SYNTAX) {F75ADB0D}>)
97: (SB-DEBUG::FUNCALL-WITH-DEBUG-IO-SYNTAX #<FUNCTION SB-DEBUG::%INVOKE-DEBUGGER> #<SB-INT:SIMPLE-READER-ERROR "unmatched close parenthesis" {A36A799}>)
98: (INVOKE-DEBUGGER #<SB-INT:SIMPLE-READER-ERROR "unmatched close parenthesis" {A36A799}>)
99: (ERROR SB-INT:SIMPLE-READER-ERROR :STREAM #<SYNONYM-STREAM :SYMBOL SB-SYS:*STDIN* {91051F1}> :FORMAT-CONTROL "unmatched close parenthesis" :FORMAT-ARGUMENTS NIL)
100: (SB-IMPL::READ-RIGHT-PAREN #<SYNONYM-STREAM :SYMBOL SB-SYS:*STDIN* {91051F1}> #<unused argument>)
101: (SB-IMPL::READ-MAYBE-NOTHING #<SYNONYM-STREAM :SYMBOL SB-SYS:*STDIN* {91051F1}> #\))
102: (SB-IMPL::%READ-PRESERVING-WHITESPACE #<SYNONYM-STREAM :SYMBOL SB-SYS:*STDIN* {91051F1}> NIL (NIL) T)
103: (SB-IMPL::%READ-PRESERVING-WHITESPACE #<SYNONYM-STREAM :SYMBOL SB-SYS:*STDIN* {91051F1}> NIL (NIL) NIL)
104: (READ #<SYNONYM-STREAM :SYMBOL SB-SYS:*STDIN* {91051F1}> NIL (NIL) NIL)
105: (SB-IMPL::REPL-READ-FORM-FUN #<SYNONYM-STREAM :SYMBOL SB-SYS:*STDIN* {91051F1}> #<unused argument>)
106: (SB-IMPL::REPL-FUN NIL)
107: ((LAMBDA NIL :IN SB-IMPL::TOPLEVEL-REPL))
108: (SB-IMPL::%WITH-REBOUND-IO-SYNTAX #<CLOSURE (LAMBDA NIL :IN SB-IMPL::TOPLEVEL-REPL) {9F75CED}>)
109: (SB-IMPL::TOPLEVEL-REPL NIL)
110: (SB-IMPL::TOPLEVEL-INIT)
111: ((FLET SB-UNIX::BODY :IN SAVE-LISP-AND-DIE))
112: ((FLET "WITHOUT-INTERRUPTS-BODY-27" :IN SAVE-LISP-AND-DIE))
113: ((LABELS SB-IMPL::RESTART-LISP :IN SAVE-LISP-AND-DIE))

debugger invoked on a SIMPLE-ERROR in thread #<THREAD "main thread" RUNNING {9461061}>: Maximum error nesting depth exceeded

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [ABORT] Reduce debugger level (to debug level 7).
  1:         Reduce debugger level (to debug level 6).
  2:         Reduce debugger level (to debug level 5).
  3:         Reduce debugger level (to debug level 4).
  4:         Reduce debugger level (to debug level 3).
  5:         Reduce debugger level (to debug level 2).
  6:         Reduce debugger level (to debug level 1).
  7:         Exit debugger, returning to top level.

(INVOKE-DEBUGGER #<SIMPLE-ERROR "Maximum error nesting depth exceeded" {AA3BE19}>)
0[8] (mystery 'dancing 'bear)                        ^Z
[1]+  Stopped                 sbcl
[0;32m@Arndt-Madison [1;31mâžœ [1;34m/workspaces/csci-330-homeworks-Arndt-Madison [0;36m([1;31mmain[0;36m) [0m$ sbcl
This is SBCL 1.4.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.
* Z ^Z
[2]+  Stopped                 sbcl
[0;32m@Arndt-Madison [1;31mâžœ [1;34m/workspaces/csci-330-homeworks-Arndt-Madison [0;36m([1;31mmain[0;36m) [0m$ script Q1_
Script started, file is Q1_
[0;32m@Arndt-Madison [0mâžœ [1;34m/workspaces/csci-330-homeworks-Arndt-Madison [0;36m([1;31mmain[0;36m) [0m$ sbcl
This is SBCL 1.4.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.
* (mystery '(zowie))
; in: MYSTERY '(ZOWIE)
;     (MYSTERY '(ZOWIE))
; 
; caught STYLE-WARNING:
;   undefined function: MYSTERY
; 
; compilation unit finished
;   Undefined function:
;     MYSTERY
;   caught 1 STYLE-WARNING condition

debugger invoked on a UNDEFINED-FUNCTION in thread
#<THREAD "main thread" RUNNING {9461061}>:
  The function COMMON-LISP-USER::MYSTERY is undefined.

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [ABORT] Exit debugger, returning to top level.

("undefined function" (ZOWIE))
0] (defun mystery (x) (list (second x) (first x)))
; No debug variables for current frame: using EVAL instead of EVAL-IN-FRAME.
MYSTERY
0] (mystery '(zowie))
; No debug variables for current frame: using EVAL instead of EVAL-IN-FRAME.
(NIL ZOWIE)
0] (mystery (list 'first 'second))
; No debug variables for current frame: using EVAL instead of EVAL-IN-FRAME.
(SECOND FIRST)
0] (defun speak (x y) (list â€™all â€™x â€™is â€™y))                'all x is y))
; No debug variables for current frame: using EVAL instead of EVAL-IN-FRAME.
; in: DEFUN SPEAK
;     (LIST 'ALL X IS Y)
; 
; caught WARNING:
;   undefined variable: IS
; 
; compilation unit finished
;   Undefined variable:
;     IS
;   caught 1 WARNING condition
SPEAK
0] (defun speak (x y) (list 'all x is y))      'is y))
; No debug variables for current frame: using EVAL instead of EVAL-IN-FRAME.
WARNING: redefining COMMON-LISP-USER::SPEAK in DEFUN
SPEAK
0] (list '  con t nil)
; No debug variables for current frame: using EVAL instead of EVAL-IN-FRAME.
(CON T NIL)
0] (eval (list 'con t nil))
; No debug variables for current frame: using EVAL instead of EVAL-IN-FRAME.
; in: CON T
;     (CON T NIL)
; 
; caught STYLE-WARNING:
;   undefined function: CON
; 
; compilation unit finished
;   Undefined function:
;     CON
;   caught 1 STYLE-WARNING condition

debugger invoked on a UNDEFINED-FUNCTION in thread
#<THREAD "main thread" RUNNING {9461061}>:
  The function COMMON-LISP-USER::CON is undefined.

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [ABORT] Reduce debugger level (to debug level 1).
  1:         Exit debugger, returning to top level.

("undefined function" T NIL)
0[2] (eval (list 'con t nil))        s t nill ))
; No debug variables for current frame: using EVAL instead of EVAL-IN-FRAME.
(T)
0[2] (eval (eval (list 'cons t nil)))
; No debug variables for current frame: using EVAL instead of EVAL-IN-FRAME.
; in: T
;     (T)
; 
; caught WARNING:
;   The function T is undefined, and its name is reserved by ANSI CL so that even
;   if it were defined later, the code doing so would not be portable.
; 
; compilation unit finished
;   Undefined function:
;     T
;   caught 1 WARNING condition

debugger invoked on a UNDEFINED-FUNCTION in thread
#<THREAD "main thread" RUNNING {9461061}>:
  The function COMMON-LISP:T is undefined.

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [ABORT] Reduce debugger level (to debug level 2).
  1:         Reduce debugger level (to debug level 1).
  2:         Exit debugger, returning to top level.

("undefined function")
0[3] (apply #'cons ( '(t nill))
; No debug variables for current frame: using EVAL instead of EVAL-IN-FRAME.
(T . NILL)
0[3] (eval nil)
; No debug variables for current frame: using EVAL instead of EVAL-IN-FRAME.
NIL
0[3] (list 'eval nil)
; No debug variables for current frame: using EVAL instead of EVAL-IN-FRAME.
(EVAL NIL)
0[3] (eval (list 'eval nil))
; No debug variables for current frame: using EVAL instead of EVAL-IN-FRAME.
NIL
0[3] ext it
; No debug variables for current frame: using EVAL instead of EVAL-IN-FRAME.

debugger invoked on a UNBOUND-VA
Script started on 2025-01-29 18:42:34+00:00 [TERM="xterm-256color" TTY="/dev/pts/1" COLUMNS="122" LINES="8"]
[0;32m@Arndt-Madison [0mâžœ [1;34m/workspaces/csci-330-homeworks-Arndt-Madison [0;36m([1;31mmain[0;36m) [0m$ sbcl
This is SBCL 1.4.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.
* (mystery '(zowie))
; in: MYSTERY '(ZOWIE)
;     (MYSTERY '(ZOWIE))
; 
; caught STYLE-WARNING:
;   undefined function: MYSTERY
; 
; compilation unit finished
;   Undefined function:
;     MYSTERY
;   caught 1 STYLE-WARNING condition

debugger invoked on a UNDEFINED-FUNCTION in thread
#<THREAD "main thread" RUNNING {9461061}>:
  The function COMMON-LISP-USER::MYSTERY is undefined.

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [ABORT] Exit debugger, returning to top level.

("undefined function" (ZOWIE))
0] (defun mystery (x) (list (second x) (first x)))
; No debug variables for current frame: using EVAL instead of EVAL-IN-FRAME.
MYSTERY
0] (mystery '(zowie))
; No debug variables for current frame: using EVAL instead of EVAL-IN-FRAME.
(NIL ZOWIE)
0] (mystery (list 'first 'second))
; No debug variables for current frame: using EVAL instead of EVAL-IN-FRAME.
(SECOND FIRST)
0] (defun speak (x y) (list â€™all â€™x â€™is â€™y))                'all x is y))
; No debug variables for current frame: using EVAL instead of EVAL-IN-FRAME.
; in: DEFUN SPEAK
;     (LIST 'ALL X IS Y)
; 
; caught WARNING:
;   undefined variable: IS
; 
; compilation unit finished
;   Undefined variable:
;     IS
;   caught 1 WARNING condition
SPEAK
0] (defun speak (x y) (list 'all x is y))      'is y))
; No debug variables for current frame: using EVAL instead of EVAL-IN-FRAME.
WARNING: redefining COMMON-LISP-USER::SPEAK in DEFUN
SPEAK
0] (list '  con t nil)
; No debug variables for current frame: using EVAL instead of EVAL-IN-FRAME.
(CON T NIL)
0] (eval (list 'con t nil))
; No debug variables for current frame: using EVAL instead of EVAL-IN-FRAME.
; in: CON T
;     (CON T NIL)
; 
; caught STYLE-WARNING:
;   undefined function: CON
; 
; compilation unit finished
;   Undefined function:
;     CON
;   caught 1 STYLE-WARNING condition

debugger invoked on a UNDEFINED-FUNCTION in thread
#<THREAD "main thread" RUNNING {9461061}>:
  The function COMMON-LISP-USER::CON is undefined.

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [ABORT] Reduce debugger level (to debug level 1).
  1:         Exit debugger, returning to top level.

("undefined function" T NIL)
0[2] (eval (list 'con t nil))        s t nill ))
; No debug variables for current frame: using EVAL instead of EVAL-IN-FRAME.
(T)
0[2] (eval (eval (list 'cons t nil)))
; No debug variables for current frame: using EVAL instead of EVAL-IN-FRAME.
; in: T
;     (T)
; 
; caught WARNING:
;   The function T is undefined, and its name is reserved by ANSI CL so that even
;   if it were defined later, the code doing so would not be portable.
; 
; compilation unit finished
;   Undefined function:
;     T
;   caught 1 WARNING condition

debugger invoked on a UNDEFINED-FUNCTION in thread
#<THREAD "main thread" RUNNING {9461061}>:
  The function COMMON-LISP:T is undefined.

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [ABORT] Reduce debugger level (to debug level 2).
  1:         Reduce debugger level (to debug level 1).
  2:         Exit debugger, returning to top level.

("undefined function")
0[3] (appl